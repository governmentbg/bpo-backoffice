--liquibase formatted sql

--changeset dveizov:205.1
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'ACTION_INDEX_AFTER') ALTER TABLE IPASPROD.IP_ACTION DISABLE TRIGGER ACTION_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'FILE_INDEX_AFTER') ALTER TABLE IPASPROD.IP_FILE DISABLE TRIGGER FILE_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'IP_DOC_FILES_INDEX_AFTER') ALTER TABLE IPASPROD.IP_DOC_FILES DISABLE TRIGGER IP_DOC_FILES_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'IP_DOC_INDEX_AFTER') ALTER TABLE IPASPROD.IP_DOC DISABLE TRIGGER IP_DOC_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'IP_FILE_RELATIONSHIP_INDEX_AFTER') ALTER TABLE IPASPROD.IP_FILE_RELATIONSHIP DISABLE TRIGGER IP_FILE_RELATIONSHIP_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'IP_PATENT_LOCARNO_CLASSES_INDEX_AFTER') ALTER TABLE IPASPROD.IP_PATENT_LOCARNO_CLASSES DISABLE TRIGGER IP_PATENT_LOCARNO_CLASSES_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'IP_USERDOC_INDEX_AFTER') ALTER TABLE IPASPROD.IP_USERDOC DISABLE TRIGGER IP_USERDOC_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'IP_USERDOC_PERSON_INDEX_AFTER') ALTER TABLE EXT_CORE.IP_USERDOC_PERSON DISABLE TRIGGER IP_USERDOC_PERSON_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'IP_USERDOC_TYPES_INDEX_AFTER') ALTER TABLE IPASPROD.IP_USERDOC_TYPES DISABLE TRIGGER IP_USERDOC_TYPES_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'JOURNAL_ELEMENT_INDEX_AFTER') ALTER TABLE EXT_JOURNAL.JOURNAL_ELEMENT DISABLE TRIGGER JOURNAL_ELEMENT_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'LOGO_VIENNA_CLASSES_INDEX_AFTER') ALTER TABLE IPASPROD.IP_LOGO_VIENNA_CLASSES DISABLE TRIGGER LOGO_VIENNA_CLASSES_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'MARK_INDEX_AFTER') ALTER TABLE IPASPROD.IP_MARK DISABLE TRIGGER MARK_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'MARK_LOGO_INDEX_AFTER') ALTER TABLE IPASPROD.IP_LOGO DISABLE TRIGGER MARK_LOGO_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'MARK_NICE_CLASSES_INDEX_AFTER') ALTER TABLE IPASPROD.IP_MARK_NICE_CLASSES DISABLE TRIGGER MARK_NICE_CLASSES_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'MARK_OWNER_CHANGES') ALTER TABLE IPASPROD.IP_MARK_OWNERS DISABLE TRIGGER MARK_OWNER_CHANGES;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'MARK_OWNER_INDEX_AFTER') ALTER TABLE IPASPROD.IP_MARK_OWNERS DISABLE TRIGGER MARK_OWNER_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'MARK_REPRS_INDEX_AFTER') ALTER TABLE IPASPROD.IP_MARK_REPRS DISABLE TRIGGER MARK_REPRS_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PATENT_INDEX_AFTER') ALTER TABLE IPASPROD.IP_PATENT DISABLE TRIGGER PATENT_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PATENT_INVENTOR_INDEX_AFTER') ALTER TABLE IPASPROD.IP_PATENT_INVENTORS DISABLE TRIGGER PATENT_INVENTOR_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PATENT_IPC_CLASSES_INDEX_AFTER') ALTER TABLE IPASPROD.IP_PATENT_IPC_CLASSES DISABLE TRIGGER PATENT_IPC_CLASSES_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PATENT_OWNER_CHANGES') ALTER TABLE IPASPROD.IP_PATENT_OWNERS DISABLE TRIGGER PATENT_OWNER_CHANGES;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PATENT_OWNER_INDEX_AFTER') ALTER TABLE IPASPROD.IP_PATENT_OWNERS DISABLE TRIGGER PATENT_OWNER_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PATENT_REPR_INDEX_AFTER') ALTER TABLE IPASPROD.IP_PATENT_REPRS DISABLE TRIGGER PATENT_REPR_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PATENT_SUMMARY_INDEX_AFTER') ALTER TABLE IPASPROD.IP_PATENT_SUMMARY DISABLE TRIGGER PATENT_SUMMARY_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PERSON_ADDRESS_INDEX_AFTER') ALTER TABLE IPASPROD.IP_PERSON_ADDRESSES DISABLE TRIGGER PERSON_ADDRESS_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PERSON_INDEX_AFTER') ALTER TABLE IPASPROD.IP_PERSON DISABLE TRIGGER PERSON_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PLANT_INDEX_AFTER') ALTER TABLE EXT_CORE.PLANT DISABLE TRIGGER PLANT_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PLANT_TAXON_NOMENCLATURE_INDEX_AFTER') ALTER TABLE EXT_CORE.PLANT_TAXON_NOMENCLATURE DISABLE TRIGGER PLANT_TAXON_NOMENCLATURE_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PROC_INDEX_AFTER') ALTER TABLE IPASPROD.IP_PROC DISABLE TRIGGER PROC_INDEX_AFTER;

--changeset dveizov:205.2
DELETE FROM IPASPROD.IP_MARK_REPRS where REPRESENTATIVE_TYP = 'AS';
DELETE FROM IPASPROD.IP_PATENT_REPRS where REPRESENTATIVE_TYP = 'AS';
DELETE FROM IPASPROD.IP_USERDOC_REPRS where REPRESENTATIVE_TYP = 'AS';

--changeset dveizov:205.3
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'ACTION_INDEX_AFTER') ALTER TABLE IPASPROD.IP_ACTION ENABLE TRIGGER ACTION_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'FILE_INDEX_AFTER') ALTER TABLE IPASPROD.IP_FILE ENABLE TRIGGER FILE_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'IP_DOC_FILES_INDEX_AFTER') ALTER TABLE IPASPROD.IP_DOC_FILES ENABLE TRIGGER IP_DOC_FILES_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'IP_DOC_INDEX_AFTER') ALTER TABLE IPASPROD.IP_DOC ENABLE TRIGGER IP_DOC_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'IP_FILE_RELATIONSHIP_INDEX_AFTER') ALTER TABLE IPASPROD.IP_FILE_RELATIONSHIP ENABLE TRIGGER IP_FILE_RELATIONSHIP_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'IP_PATENT_LOCARNO_CLASSES_INDEX_AFTER') ALTER TABLE IPASPROD.IP_PATENT_LOCARNO_CLASSES ENABLE TRIGGER IP_PATENT_LOCARNO_CLASSES_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'IP_USERDOC_INDEX_AFTER') ALTER TABLE IPASPROD.IP_USERDOC ENABLE TRIGGER IP_USERDOC_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'IP_USERDOC_PERSON_INDEX_AFTER') ALTER TABLE EXT_CORE.IP_USERDOC_PERSON ENABLE TRIGGER IP_USERDOC_PERSON_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'IP_USERDOC_TYPES_INDEX_AFTER') ALTER TABLE IPASPROD.IP_USERDOC_TYPES ENABLE TRIGGER IP_USERDOC_TYPES_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'JOURNAL_ELEMENT_INDEX_AFTER') ALTER TABLE EXT_JOURNAL.JOURNAL_ELEMENT ENABLE TRIGGER JOURNAL_ELEMENT_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'LOGO_VIENNA_CLASSES_INDEX_AFTER') ALTER TABLE IPASPROD.IP_LOGO_VIENNA_CLASSES ENABLE TRIGGER LOGO_VIENNA_CLASSES_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'MARK_INDEX_AFTER') ALTER TABLE IPASPROD.IP_MARK ENABLE TRIGGER MARK_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'MARK_LOGO_INDEX_AFTER') ALTER TABLE IPASPROD.IP_LOGO ENABLE TRIGGER MARK_LOGO_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'MARK_NICE_CLASSES_INDEX_AFTER') ALTER TABLE IPASPROD.IP_MARK_NICE_CLASSES ENABLE TRIGGER MARK_NICE_CLASSES_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'MARK_OWNER_CHANGES') ALTER TABLE IPASPROD.IP_MARK_OWNERS ENABLE TRIGGER MARK_OWNER_CHANGES;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'MARK_OWNER_INDEX_AFTER') ALTER TABLE IPASPROD.IP_MARK_OWNERS ENABLE TRIGGER MARK_OWNER_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'MARK_REPRS_INDEX_AFTER') ALTER TABLE IPASPROD.IP_MARK_REPRS ENABLE TRIGGER MARK_REPRS_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PATENT_INDEX_AFTER') ALTER TABLE IPASPROD.IP_PATENT ENABLE TRIGGER PATENT_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PATENT_INVENTOR_INDEX_AFTER') ALTER TABLE IPASPROD.IP_PATENT_INVENTORS ENABLE TRIGGER PATENT_INVENTOR_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PATENT_IPC_CLASSES_INDEX_AFTER') ALTER TABLE IPASPROD.IP_PATENT_IPC_CLASSES ENABLE TRIGGER PATENT_IPC_CLASSES_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PATENT_OWNER_CHANGES') ALTER TABLE IPASPROD.IP_PATENT_OWNERS ENABLE TRIGGER PATENT_OWNER_CHANGES;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PATENT_OWNER_INDEX_AFTER') ALTER TABLE IPASPROD.IP_PATENT_OWNERS ENABLE TRIGGER PATENT_OWNER_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PATENT_REPR_INDEX_AFTER') ALTER TABLE IPASPROD.IP_PATENT_REPRS ENABLE TRIGGER PATENT_REPR_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PATENT_SUMMARY_INDEX_AFTER') ALTER TABLE IPASPROD.IP_PATENT_SUMMARY ENABLE TRIGGER PATENT_SUMMARY_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PERSON_ADDRESS_INDEX_AFTER') ALTER TABLE IPASPROD.IP_PERSON_ADDRESSES ENABLE TRIGGER PERSON_ADDRESS_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PERSON_INDEX_AFTER') ALTER TABLE IPASPROD.IP_PERSON ENABLE TRIGGER PERSON_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PLANT_INDEX_AFTER') ALTER TABLE EXT_CORE.PLANT ENABLE TRIGGER PLANT_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PLANT_TAXON_NOMENCLATURE_INDEX_AFTER') ALTER TABLE EXT_CORE.PLANT_TAXON_NOMENCLATURE ENABLE TRIGGER PLANT_TAXON_NOMENCLATURE_INDEX_AFTER;
IF EXISTS(SELECT * FROM sys.triggers WHERE type = 'TR' AND name = 'PROC_INDEX_AFTER') ALTER TABLE IPASPROD.IP_PROC ENABLE TRIGGER PROC_INDEX_AFTER;