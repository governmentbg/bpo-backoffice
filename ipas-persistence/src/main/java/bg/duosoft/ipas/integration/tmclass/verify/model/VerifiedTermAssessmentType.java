//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.02.14 at 01:17:22 PM EET 
//


package bg.duosoft.ipas.integration.tmclass.verify.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for VerifiedTermAssessmentType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="VerifiedTermAssessmentType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token"&gt;
 *     &lt;enumeration value="Rejection term"/&gt;
 *     &lt;enumeration value="Controlled term found"/&gt;
 *     &lt;enumeration value="Homonym found"/&gt;
 *     &lt;enumeration value="Wrong class"/&gt;
 *     &lt;enumeration value="Synonym found"/&gt;
 *     &lt;enumeration value="Synonym found in wrong class"/&gt;
 *     &lt;enumeration value="Not found"/&gt;
 *     &lt;enumeration value="No class given"/&gt;
 *     &lt;enumeration value="Similar term"/&gt;
 *     &lt;enumeration value="Contains controlled term"/&gt;
 *     &lt;enumeration value="Legacy term"/&gt;
 *     &lt;enumeration value="Contains legacy term"/&gt;
 *     &lt;enumeration value="Related service found"/&gt;
 *     &lt;enumeration value="HDB equivalent term found"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "VerifiedTermAssessmentType")
@XmlEnum
public enum VerifiedTermAssessmentType {

    @XmlEnumValue("Rejection term")
    REJECTION_TERM("Rejection term"),
    @XmlEnumValue("Controlled term found")
    CONTROLLED_TERM_FOUND("Controlled term found"),
    @XmlEnumValue("Homonym found")
    HOMONYM_FOUND("Homonym found"),
    @XmlEnumValue("Wrong class")
    WRONG_CLASS("Wrong class"),
    @XmlEnumValue("Synonym found")
    SYNONYM_FOUND("Synonym found"),
    @XmlEnumValue("Synonym found in wrong class")
    SYNONYM_FOUND_IN_WRONG_CLASS("Synonym found in wrong class"),
    @XmlEnumValue("Not found")
    NOT_FOUND("Not found"),
    @XmlEnumValue("No class given")
    NO_CLASS_GIVEN("No class given"),
    @XmlEnumValue("Similar term")
    SIMILAR_TERM("Similar term"),
    @XmlEnumValue("Contains controlled term")
    CONTAINS_CONTROLLED_TERM("Contains controlled term"),
    @XmlEnumValue("Legacy term")
    LEGACY_TERM("Legacy term"),
    @XmlEnumValue("Contains legacy term")
    CONTAINS_LEGACY_TERM("Contains legacy term"),
    @XmlEnumValue("Related service found")
    RELATED_SERVICE_FOUND("Related service found"),
    @XmlEnumValue("HDB equivalent term found")
    HDB_EQUIVALENT_TERM_FOUND("HDB equivalent term found");
    private final String value;

    VerifiedTermAssessmentType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static VerifiedTermAssessmentType fromValue(String v) {
        for (VerifiedTermAssessmentType c: VerifiedTermAssessmentType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
